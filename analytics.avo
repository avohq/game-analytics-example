// Generated by Avo version 0.1, PLEASE EDIT WITH CARE

type string

type int

type float

type bool

property "Currency"
  description "See https://openexchangerates.org/api/currencies.json. Example: USD"
  type string
  matches "EUR" | "USD"

property "Amount"
  description "Amount in cents. Example: 99 is 0.99$"
  type float

property "Item Type"
  description "The type / category of the item. Example: GoldPacks\n\nFor sink events it can describe an item category you are buying (Weapons) or a place (Gameplay) the currency was consumed. For source events it can describe how the currency was gained. For example “IAP” (for in-app purchase) or from using another currency (Gems). Example: Weapons, IAP, Gameplay, Boosters"
  type string

property "Item Id"
  description "Specific item bought. Example: 1000GoldPack\n\nFor sink events it can describe the specific item (SwordOfFire) gained. If consumed during Gameplay you can simply use “Consumed”. For source events it describes how the player got the added currency. This could be buying a pack (BoosterPack5) or earned through Gameplay when completing a level (LevelEnd). Example: BoosterPack5, SwordOfFire, LevelEnd, Coins400"
  type string

property "Cart Type"
  description "The game location of the purchase. Example: EndOfLevel"
  type string

property "Flow Type"
  description "A defined enum for sourcing and sinking resources."
  type string
  matches "Sink" | "Source"

property "Resource Currency"
  description "The resource type/currency to track. Example: Gems, BeamBoosters, Coins"
  type string

property "Resource Amount"
  description "Amount sourced or sinked. 0 or negative numbers are not allowed. Example: 100.0"
  type float
  min 1.000000

property "Progression Status"
  description "Status of added progression"
  type string
  matches "Complete" | "Start" | "Fail"

property "Progression 01"
  description "Required progression location"
  type string

property "Progression 02"
  description "Not required. Use if needed."
  optional type string

property "Progression 03"
  description "Not required. Use if needed."
  optional type string

property "Score"
  description "An optional score when a user completes or fails a progression attempt. Remember to set progression02 and/or progression03 if they are not used when using score parameter."
  optional type int

property "Severity"
  type string
  matches "Critical" | "Error" | "Warning" | "Info" | "Debug"

property "Message"
  description "Error message (can be null). Example: Error when entering level12"
  optional type string

event "Business"
  description "In-App Purchases supporting receipt validation on GA servers.\n\nBusiness events are used to track real-money transactions.\n\nExample A: A player goes into the game’s shop and makes a purchase of a pack of coins.\n\nExample B: You show the player a screen at the end of a level to prompt them to buy lives. They choose to purchase a pack of 3 lives that costs $0.99."

  property "Currency"
  property "Amount"
  property "Item Type"
  property "Item Id"
  property "Cart Type"

event "Resource"
  description "Managing the flow of virtual currencies – like gems or lives.\n\nResource events are used to register the flow of your in-game economy (virtual currencies) – the sink (subtract) and the source (add) for each virtual currency.\n\nA “sink” is when a player loses or spends a resource. A “source” is when a player gains or earns a resource.\n\nExample A: A player spends one life by starting a game.\nExample B: A player buys a boost in the game with 100 gold currency.\nExample C: A player earns a reward of 5 lives for watching an ad.\nExample D: A player buys a pack of 100 gold currency as an in-app purchase for $0.99 from the store. (The event below is only for the addition of gold to the player’s balance.)"

  property "Flow Type"
  property "Resource Currency"
  property "Resource Amount"
  property "Item Type"
  property "Item Id"

event "Progression"
  description "Level attempts with Start, Fail & Complete event.\n\nProgression events are used to track attempts at completing some part of a game (level, area). A defined area follow a 3 tier hierarchy structure (could be world:stage:level) to indicate what part of the game the player is trying to complete.\nWhen a player is starting a progression attempt a start event should be added.\nWhen the player then finishes the attempt a fail or complete event should be added along with a score if needed.\n\nUse this event to track when players start and finish levels in your game. This event follows a 3 hierarchy structure (for example World, Level and Phase) to indicate a player’s path or place in the game.\n\nThis type of events can be used for calculating metrics such as how many levels were started on a day and not only.\n\n“Progress” could mean things like leveling up, completing quests, completing missions, or completing milestones. You can ONLY track one type of progression with this event. For example, if you have levels and quests in your game, the progression event should only be used for either tracking levels or quests, but not both. Use Design Event and/or Custom Dimensions to track a secondary progression concept, if need be.\n\nExample A: A players starts Day 1 of the Wild West world in Plants vs. Zombies 2.\nExample B: A player completes the “Enter a Competition” quest in My Horse by entering the Europe competition."

  property "Progression Status"
  property "Progression 01"
  property "Progression 02"
  property "Progression 03"
  property "Score"

event "Error"
  description "Submit exception stack traces or custom error messages.\n\nError events are used to track custom errors in the game code. You can group the events by severity level and attach a message."

  property "Severity"
  property "Message"
